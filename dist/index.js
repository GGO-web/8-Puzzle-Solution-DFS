(()=>{"use strict";const e=[{x:0,y:-1,name:"⇐"},{x:-1,y:0,name:"⇑"},{x:0,y:1,name:"⇒"},{x:1,y:0,name:"⇓"}],t={currentState:null,moves:0,settled:0,dropped:0,depth:0,haveSolution:!1},n=(e,t,n=!0)=>{console.log(`Index of the state ${t}`);let o="";for(let t of e){const e=t.map((e=>e||" "));o+="-------------\n",o+=`| ${e[0]} | ${e[1]} | ${e[2]} |\n`}return o+="-------------\n",n&&console.log(o),o},o=e=>{let t={x:0,y:0,name:"empty"};e:for(let n=0;n<e[0].length;++n)for(let o=0;o<e.length;++o)if(null===e[n][o]){t.x=n,t.y=o;break e}return t},s=e=>e.x>=3||e.x<0||e.y>=3||e.y<0;class l{constructor(e,t,o,s,l){this.getState=()=>this.state,this.getMoves=()=>this.operator,this.getDepth=()=>this.depth||1,this.pathFromStart=()=>{let e=[],t=[],o=this;do{e.push(o?.getState()),t.push(o?.getMoves()),o=o?.parent,o&&!o.parent&&e.push(o?.getState())}while(0!==o?.getDepth());e.reverse(),t.reverse();let s=1;for(const t of e)n(t,s),s++;return console.log(`Кількість переміщень: ${t.length}`),console.log(`Переміщення по порядку: ${t.join(", ")}\n`),t},this.state=e,this.parent=t,this.operator=o,this.depth=s,this.cost=l}}let r=t;const a=document.getElementById("game-depth"),d=function(t,n,c,i){for(;i.length;){let u=i.pop();if(u.getDepth()>=parseInt(a.value)||r.haveSolution)return n;if(r={...r,currentState:u,settled:c.size,depth:u.getDepth(),haveSolution:!1},p=u.getState(),h=t,p?.toString()===h?.toString())return r.haveSolution=!0,n;const g=o(u.getState());e.forEach((e=>{const o=u?.getState()?.map((e=>[...e])),a={x:g.x+e.x,y:g.y+e.y,name:e.name};s(a)||([o[g.x][g.y],o[a.x][a.y]]=[o[a.x][a.y],o[g.x][g.y]],r.moves++,c.get(o.toString())?r.dropped++:(i.push(new l(o,u,e.name,u.getDepth()+1,0)),c.set(o.toString(),!0),n.push({state:o,index:r.moves+1}),d(t,n,c,i)))}))}var p,h;return n};(()=>{let e=[];const o=document.querySelector(".next"),s=document.querySelector(".result"),c=document.querySelector(".find"),i=document.getElementById("result-content");let p=0;const h=document.getElementById("results"),u=()=>{const n=e=>{const t=[];for(let n of e.rows){const e=[];for(let t of n.cells){const n=parseInt(t.innerHTML);Number.isNaN(n)?e.push(null):e.push(n)}t.push(e)}return t},a=document.querySelector(".initial-state"),c=document.querySelector(".final-state"),i=n(a),u=n(c);p=0,r=t,h.innerHTML=null;const g=new Map;g.set(i.toString(),!0);const m=[new l(i,null,null,0,0)];e=d(u,[{state:i,index:1}],g,m),o.disabled=!1,s.disabled=!1};o.disabled=!0,s.disabled=!0,o?.addEventListener("click",(()=>{p>=e.length-1&&(o.disabled=!0);const t=document.createElement("table");t.className+="table table-primary table-hover table-bordered table-sm align-middle caption-top",t.style.width="200px",t.style.height="200px",t.style.textAlign="center",t.insertAdjacentHTML("afterbegin",`\n            <caption class="fw-bold text-primary">\n               Index of the state is ${e[p].index}\n            </caption>\n         `);const s=document.createElement("tbody");for(let t of e[p].state){const e=s.insertRow();for(let n of t){const t=e.insertCell();t.classList.add("align-middle"),t.innerHTML=n?String(n):" "}}t.appendChild(s),h?.appendChild(t),h.scrollTop=h.scrollHeight,n(e[p].state,e[p].index),p++})),s?.addEventListener("click",(()=>{i.innerHTML="",r.haveSolution?(console.log("Порядок переміщень для розв'язку гри в 8:"),console.log(`Кількість відвіданих станів: ${r.moves}`),console.log(`Кількість станів занесених у БД: ${r.settled}`),console.log(`Кількість відкинутих станів: ${r.dropped}`),console.log(`Глибина дерева пошуку на якій знайдено рішення: ${r.depth}`),i.insertAdjacentHTML("beforeend",`\n            <code>\n            <pre>Кількість відвіданих станів: ${r.moves}<br>Кількість станів занесених у БД: ${r.settled}<br>Кількість відкинутих станів: ${r.dropped}<br>Глибина дерева пошуку на якій знайдено рішення: ${r.depth}</pre>\n            </code>\n         `)):(console.log(`Кількість відвіданих станів: ${r.moves}`),console.log(`Кількість станів занесених у БД: ${r.settled}`),console.log(`Кількість відкинутих станів: ${r.dropped}`),console.log("Гра у 8 немає розв'язків"),i.insertAdjacentHTML("beforeend",`\n            <code>\n            <pre>Кількість відвіданих станів : ${r.moves}<br>Кількість станів занесених у БД : ${r.settled}<br>Кількість відкинутих станів : ${r.dropped}<br>Гра у 8 немає розв'язків</pre>\n            </code>\n         `))})),c?.addEventListener("click",u),a.addEventListener("change",u)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,